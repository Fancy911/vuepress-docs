(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{671:function(e,r,t){"use strict";t.r(r);var i=t(2),v=Object(i.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("手写Promise，也叫Promise的自定义封装。")]),e._v(" "),r("h2",{attrs:{id:"实现步骤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现步骤"}},[e._v("#")]),e._v(" 实现步骤")]),e._v(" "),r("ol",[r("li",[e._v("初始化Promise函数对象：初始化状态、结果值、回调函数")]),e._v(" "),r("li",[e._v("初始化reject和resolve函数，并实现 1.状态的改变 2.结果值的设置 3.回调函数的调用")]),e._v(" "),r("li",[e._v("实现throw抛出异常改变状态的功能")]),e._v(" "),r("li",[e._v("实现Promise对象的状态只能改变一次的功能")]),e._v(" "),r("li",[e._v("实现then方法执行回调的功能")]),e._v(" "),r("li",[e._v("实现异步任务下的回调的执行：callbacks[]")]),e._v(" "),r("li",[e._v("实现指定多个回调执行的功能")]),e._v(" "),r("li",[e._v("同步修改状态和异步修改状态的处理，then的回调处理。")]),e._v(" "),r("li",[e._v("实现catch方法的功能")]),e._v(" "),r("li",[e._v("实现Promise.resolve方法")]),e._v(" "),r("li",[e._v("实现Promise.reject方法")]),e._v(" "),r("li",[e._v("实现Promise.all方法")]),e._v(" "),r("li",[e._v("实现Promise.race方法")]),e._v(" "),r("li",[e._v("实现then的异步链式调用")]),e._v(" "),r("li",[e._v("改造为ES6的class语法")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Fancy911/Promise-Learning/tree/main/2-%E6%89%8B%E5%86%99Promise",target:"_blank",rel:"noopener noreferrer"}},[e._v("完整的手写的Promise代码"),r("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=v.exports}}]);