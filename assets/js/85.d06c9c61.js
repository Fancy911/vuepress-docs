(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{587:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("使用 nodejs 创建 HTTP 服务")]),t._v(" "),s("h2",{attrs:{id:"_1-操作步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-操作步骤"}},[t._v("#")]),t._v(" 1.操作步骤")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 导入 http 模块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 创建服务对象 create 创建 server 服务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// request 意为请求. 是对请求报文的封装对象, 通过 request 对象可以获得请求报文的数据 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// response 意为响应. 是对响应报文的封装对象, 通过 response 对象可以设置响应报文 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello HTTP server'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 监听端口, 启动服务 ")]),t._v("\nserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'服务已经启动, 端口 9000 监听中...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("http.createServer")]),t._v("里的回调函数的执行时机: 当接收到 "),s("code",[t._v("HTTP")]),t._v(" 请求的时候，就会执行")])]),s("h2",{attrs:{id:"_2-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-测试"}},[t._v("#")]),t._v(" 2.测试")]),t._v(" "),s("p",[t._v("浏览器请求对应端口")]),t._v(" "),s("p",[s("code",[t._v("http://127.0.0.1:9000")])]),t._v(" "),s("h2",{attrs:{id:"_3-注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-注意事项"}},[t._v("#")]),t._v(" 3.注意事项")]),t._v(" "),s("ol",[s("li",[t._v("命令行 ctrl + c 停止服务")]),t._v(" "),s("li",[t._v("当服务启动后，更新代码必须重启服务才能生效")]),t._v(" "),s("li",[t._v("响应内容中文乱码的解决办法\n"),s("ul",[s("li",[s("code",[t._v("response.setHeader('content-type','text/html;charset=utf-8');")])])])]),t._v(" "),s("li",[t._v("端口号被占用: "),s("code",[t._v("Error: listen EADDRINUSE: address already in use :::9000")]),t._v(" "),s("ul",[s("li",[t._v("关闭当前正在运行监听端口的服务 ( 使用较多 )")]),t._v(" "),s("li",[t._v("修改其他端口号")])])]),t._v(" "),s("li",[t._v("HTTP协议默认端口是80。HTTPS协议的默认端口是443, HTTP服务开发常用端口有3000，8080，8090，9000 等")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("如果端口被其他程序占用，可以使用"),s("code",[t._v("资源监视器")]),t._v("找到占用端口的程序，然后使用"),s("code",[t._v("任务管理器")]),t._v("关闭 对应的程序")])])])}),[],!1,null,null,null);s.default=e.exports}}]);